{"file":"examples/example-treesitter-repo/src/cpp/point.hpp","language":"cpp","line":5,"name":"Point","signature":"class Point {","type":"class"}
{"calls":["std::atan2"],"file":"examples/example-treesitter-repo/src/cpp/point.hpp","language":"cpp","line":14,"name":"headingTo","signature":"double headingTo(const Point& other) const {","type":"function"}
{"calls":["std::sqrt"],"file":"examples/example-treesitter-repo/src/cpp/point.hpp","language":"cpp","line":9,"name":"distanceTo","signature":"double distanceTo(const Point& other) const {","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/point.hpp","language":"cpp","line":8,"name":"Point","signature":"Point(double x, double y) : x(x), y(y) {}","type":"function"}
{"calls":["std::atan2"],"file":"examples/example-treesitter-repo/src/cpp/point.hpp","language":"cpp","line":14,"name":"headingTo","parent":"Point","signature":"double headingTo(const Point& other) const {","type":"function"}
{"calls":["std::sqrt"],"file":"examples/example-treesitter-repo/src/cpp/point.hpp","language":"cpp","line":9,"name":"distanceTo","parent":"Point","signature":"double distanceTo(const Point& other) const {","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/point.hpp","language":"cpp","line":8,"name":"Point","parent":"Point","signature":"Point(double x, double y) : x(x), y(y) {}","type":"function"}
{"file":"examples/example-treesitter-repo/src/cpp/pose.hpp","language":"cpp","line":5,"name":"Pose","signature":"class Pose : public Point {","type":"class"}
{"calls":["Point::headingTo"],"file":"examples/example-treesitter-repo/src/cpp/pose.hpp","language":"cpp","line":10,"name":"headingTo","signature":"double headingTo(const Point& other) const override {","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/pose.hpp","language":"cpp","line":8,"name":"Pose","signature":"Pose(double x, double y, double heading)","type":"function"}
{"calls":["Point::headingTo"],"file":"examples/example-treesitter-repo/src/cpp/pose.hpp","language":"cpp","line":10,"name":"headingTo","parent":"Pose","signature":"double headingTo(const Point& other) const override {","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/pose.hpp","language":"cpp","line":8,"name":"Pose","parent":"Pose","signature":"Pose(double x, double y, double heading)","type":"function"}
{"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":49,"name":"Cat","signature":"class Cat : public Animal, public Named {","type":"class"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":52,"name":"getName","signature":"std::string getName() const override { return name; }","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":51,"name":"Cat","signature":"Cat(const std::string& name, const Pose& pose) : Animal(name, pose) {}","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":52,"name":"getName","parent":"Cat","signature":"std::string getName() const override { return name; }","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":51,"name":"Cat","parent":"Cat","signature":"Cat(const std::string& name, const Pose& pose) : Animal(name, pose) {}","type":"function"}
{"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":44,"name":"Named","signature":"class Named {","type":"class"}
{"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":36,"name":"template","signature":"template <typename T>","type":"template"}
{"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":37,"name":"Box","signature":"class Box {","type":"class"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":41,"name":"get","signature":"T get() const { return value; }","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":40,"name":"Box","signature":"Box(const T& value) : value(value) {}","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":41,"name":"get","parent":"Box","signature":"T get() const { return value; }","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":40,"name":"Box","parent":"Box","signature":"Box(const T& value) : value(value) {}","type":"function"}
{"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":31,"name":"Dog","signature":"class Dog : public Animal {","type":"class"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":33,"name":"Dog","signature":"Dog(const std::string& name, const Pose& pose) : Animal(name, pose) {}","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":33,"name":"Dog","parent":"Dog","signature":"Dog(const std::string& name, const Pose& pose) : Animal(name, pose) {}","type":"function"}
{"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":19,"name":"Animal","signature":"class Animal {","type":"class"}
{"calls":["pose.headingTo","Point","pose.distanceTo","Point"],"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":24,"name":"distance_and_heading_to","signature":"std::pair<double, double> distance_and_heading_to(const Animal& other) const {","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":23,"name":"Animal","signature":"Animal(const std::string& name, const Pose& pose) : name(name), pose(pose) {}","type":"function"}
{"calls":["pose.headingTo","Point","pose.distanceTo","Point"],"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":24,"name":"distance_and_heading_to","parent":"Animal","signature":"std::pair<double, double> distance_and_heading_to(const Animal& other) const {","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":23,"name":"Animal","parent":"Animal","signature":"Animal(const std::string& name, const Pose& pose) : name(name), pose(pose) {}","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/cpp/test.cpp","language":"cpp","line":15,"name":"add","signature":"int add(int a, int b) {","type":"function"}
{"file":"examples/example-treesitter-repo/src/csharp/test.cs","language":"c_sharp","line":37,"name":"Dog","signature":"public class Dog {","type":"class"}
{"file":"examples/example-treesitter-repo/src/csharp/test.cs","language":"c_sharp","line":23,"name":"Animal","signature":"public class Animal {","type":"class"}
{"calls":["this.pose.HeadingTo","this.pose.DistanceTo"],"file":"examples/example-treesitter-repo/src/csharp/test.cs","language":"c_sharp","line":30,"name":"DistanceAndHeadingTo","parent":"Animal","signature":"public (double dist, double heading) DistanceAndHeadingTo(Animal other) {","type":"function"}
{"file":"examples/example-treesitter-repo/src/csharp/test.cs","language":"c_sharp","line":10,"name":"MainClass","signature":"public class MainClass {","type":"class"}
{"calls":[],"file":"examples/example-treesitter-repo/src/csharp/test.cs","language":"c_sharp","line":11,"name":"Add","parent":"MainClass","signature":"public static int Add(int a, int b) {","type":"function"}
{"file":"examples/example-treesitter-repo/src/csharp/test.cs","language":"c_sharp","line":2,"name":"Point","signature":"public class Point {","type":"class"}
{"calls":[],"file":"examples/example-treesitter-repo/src/go/test.go","language":"go","line":68,"name":"NewDog","signature":"func NewDog(name string, pose Pose) *Dog {","type":"function"}
{"file":"examples/example-treesitter-repo/src/go/test.go","language":"go","line":64,"name":"Dog","signature":"Dog struct {","type":"struct"}
{"calls":[],"file":"examples/example-treesitter-repo/src/go/test.go","language":"go","line":54,"name":"NewAnimal","signature":"func NewAnimal(name string, pose Pose) *Animal {","type":"function"}
{"file":"examples/example-treesitter-repo/src/go/test.go","language":"go","line":49,"name":"Animal","signature":"Animal struct {","type":"struct"}
{"file":"examples/example-treesitter-repo/src/go/test.go","language":"go","line":40,"name":"Direction","signature":"Direction int","type":"type"}
{"calls":[],"file":"examples/example-treesitter-repo/src/go/test.go","language":"go","line":32,"name":"NewPose","signature":"func NewPose(x, y, heading float64) *Pose {","type":"function"}
{"file":"examples/example-treesitter-repo/src/go/test.go","language":"go","line":27,"name":"Pose","signature":"Pose struct {","type":"struct"}
{"calls":[],"file":"examples/example-treesitter-repo/src/go/test.go","language":"go","line":13,"name":"NewPoint","signature":"func NewPoint(x, y float64) *Point {","type":"function"}
{"file":"examples/example-treesitter-repo/src/go/test.go","language":"go","line":8,"name":"Point","signature":"Point struct {","type":"struct"}
{"file":"examples/example-treesitter-repo/src/go/test.go","language":"go","line":5,"name":"\"math\"","signature":"\"math\"","type":"import"}
{"file":"examples/example-treesitter-repo/src/java/test.java","language":"java","line":77,"name":"Box","signature":"class Box<T> {","type":"class"}
{"calls":[],"file":"examples/example-treesitter-repo/src/java/test.java","language":"java","line":80,"name":"get","parent":"Box","signature":"public T get() { return value; }","type":"function"}
{"file":"examples/example-treesitter-repo/src/java/test.java","language":"java","line":67,"name":"Cat","signature":"class Cat extends Animal implements Named {","type":"class"}
{"calls":[],"file":"examples/example-treesitter-repo/src/java/test.java","language":"java","line":71,"name":"getName","parent":"Cat","signature":"@Override","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/java/test.java","language":"java","line":64,"name":"getName","signature":"String getName();","type":"function"}
{"file":"examples/example-treesitter-repo/src/java/test.java","language":"java","line":57,"name":"Dog","signature":"class Dog extends Animal {","type":"class"}
{"file":"examples/example-treesitter-repo/src/java/test.java","language":"java","line":43,"name":"Animal","signature":"class Animal {","type":"class"}
{"calls":[],"file":"examples/example-treesitter-repo/src/java/test.java","language":"java","line":50,"name":"distanceAndHeadingTo","parent":"Animal","signature":"public double[] distanceAndHeadingTo(Animal other) {","type":"function"}
{"file":"examples/example-treesitter-repo/src/java/test.java","language":"java","line":30,"name":"Main","signature":"class Main {","type":"class"}
{"calls":[],"file":"examples/example-treesitter-repo/src/java/test.java","language":"java","line":31,"name":"add","parent":"Main","signature":"public static int add(int a, int b) {","type":"function"}
{"file":"examples/example-treesitter-repo/src/java/test.java","language":"java","line":18,"name":"Pose","signature":"class Pose extends Point {","type":"class"}
{"calls":[],"file":"examples/example-treesitter-repo/src/java/test.java","language":"java","line":24,"name":"headingTo","parent":"Pose","signature":"@Override","type":"function"}
{"file":"examples/example-treesitter-repo/src/java/test.java","language":"java","line":2,"name":"Point","signature":"public class Point {","type":"class"}
{"calls":[],"file":"examples/example-treesitter-repo/src/java/test.java","language":"java","line":13,"name":"headingTo","parent":"Point","signature":"public double headingTo(Point other) {","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/java/test.java","language":"java","line":8,"name":"distanceTo","parent":"Point","signature":"public double distanceTo(Point other) {","type":"function"}
{"file":"examples/example-treesitter-repo/src/js/test.js","language":"javascript","line":50,"name":"Dog","signature":"class Dog extends Animal {","type":"class"}
{"file":"examples/example-treesitter-repo/src/js/test.js","language":"javascript","line":38,"name":"Animal","signature":"class Animal {","type":"class"}
{"file":"examples/example-treesitter-repo/src/js/test.js","language":"javascript","line":21,"name":"Pose","signature":"class Pose extends Point {","type":"class"}
{"file":"examples/example-treesitter-repo/src/js/test.js","language":"javascript","line":6,"name":"Point","signature":"class Point {","type":"class"}
{"calls":[],"file":"examples/example-treesitter-repo/src/js/test.js","language":"javascript","line":2,"name":"add","signature":"function add(a, b) {","type":"function"}
{"doc":"\n    Represents a dog, which is a type of Animal.\n    ","file":"examples/example-treesitter-repo/src/python/test.py","language":"python","line":122,"name":"Dog","signature":"class Dog(Animal):","type":"class"}
{"calls":[],"doc":"\n        Initializes a Dog with a name and pose.\n        ","file":"examples/example-treesitter-repo/src/python/test.py","language":"python","line":126,"name":"__init__","parent":"Dog","signature":"def __init__(self, name, pose):","type":"function"}
{"doc":"\n    Represents an animal with a name and pose.\n    ","file":"examples/example-treesitter-repo/src/python/test.py","language":"python","line":104,"name":"Animal","signature":"class Animal:","type":"class"}
{"calls":[],"doc":"\n        Returns the distance and heading to another Animal.\n        ","file":"examples/example-treesitter-repo/src/python/test.py","language":"python","line":114,"name":"distance_and_heading_to","parent":"Animal","signature":"def distance_and_heading_to(self, other):","type":"function"}
{"calls":[],"doc":"\n        Initializes an Animal with a name and pose.\n        ","file":"examples/example-treesitter-repo/src/python/test.py","language":"python","line":108,"name":"__init__","parent":"Animal","signature":"def __init__(self, name, pose):","type":"function"}
{"doc":"\n    Cardinal directions.\n    ","file":"examples/example-treesitter-repo/src/python/test.py","language":"python","line":95,"name":"Direction","signature":"class Direction(Enum):","type":"class"}
{"doc":"\n    Represents a pose with position and heading.\n    ","file":"examples/example-treesitter-repo/src/python/test.py","language":"python","line":78,"name":"Pose","signature":"class Pose(Point):","type":"class"}
{"calls":[],"doc":"\n        Returns the relative heading to another Point, adjusted by this pose's heading.\n        ","file":"examples/example-treesitter-repo/src/python/test.py","language":"python","line":89,"name":"heading_to","parent":"Pose","signature":"def heading_to(self, other):","type":"function"}
{"calls":[],"doc":"\n        Initializes a Pose with x, y, and heading.\n        ","file":"examples/example-treesitter-repo/src/python/test.py","language":"python","line":82,"name":"__init__","parent":"Pose","signature":"def __init__(self, x, y, heading):","type":"function"}
{"doc":"\n    Represents a 2D point.\n\n    This class demonstrates a class-level docstring with a summary and a longer description.\n    ","file":"examples/example-treesitter-repo/src/python/test.py","language":"python","line":37,"name":"Point","signature":"class Point:","type":"class"}
{"calls":[],"doc":"\n        Returns the angle (in radians) from this point to another Point.\n\n        Args:\n            other (Point): The other point.\n        Returns:\n            float: The angle in radians.\n        ","file":"examples/example-treesitter-repo/src/python/test.py","language":"python","line":67,"name":"heading_to","parent":"Point","signature":"def heading_to(self, other):","type":"function"}
{"calls":[],"doc":"\n        Calculates the Euclidean distance to another Point.\n\n        Args:\n            other (Point): The other point.\n        Returns:\n            float: The Euclidean distance.\n        ","file":"examples/example-treesitter-repo/src/python/test.py","language":"python","line":54,"name":"distance_to","parent":"Point","signature":"def distance_to(self, other):","type":"function"}
{"calls":[],"doc":"\n        Initializes a Point with x and y coordinates.\n\n        Args:\n            x (float): The x coordinate.\n            y (float): The y coordinate.\n        ","file":"examples/example-treesitter-repo/src/python/test.py","language":"python","line":43,"name":"__init__","parent":"Point","signature":"def __init__(self, x, y):","type":"function"}
{"calls":[],"doc":"\n    Adds two numbers and returns the result.\n\n    This function demonstrates a simple docstring with a summary line, a blank line,\n    and a more detailed description. It also includes argument and return value documentation.\n\n    Args:\n        a (int or float): First number to add.\n        b (int or float): Second number to add.\n\n    Returns:\n        int or float: The sum of a and b.\n    ","file":"examples/example-treesitter-repo/src/python/test.py","language":"python","line":21,"name":"add","signature":"def add(a, b):","type":"function"}
{"calls":[],"doc":"\n    Greets a person by name.\n    ","file":"examples/example-treesitter-repo/src/python/test.py","language":"python","line":15,"name":"greet","signature":"def greet(name):","type":"function"}
{"calls":[],"doc":"\n    A decorator that logs the function call with its arguments.\n    ","file":"examples/example-treesitter-repo/src/python/test.py","language":"python","line":5,"name":"log_call","signature":"def log_call(func):","type":"function"}
{"calls":[],"doc":"Consumes the container and returns the value.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":110,"name":"into_inner","signature":"pub fn into_inner(self) -> T {","type":"function"}
{"calls":[],"doc":"Creates a new Container.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":106,"name":"new","signature":"pub fn new(value: T) -> Self {","type":"function"}
{"doc":"A generic container for any type.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":100,"name":"Container","signature":"pub struct Container<T> {","type":"class"}
{"calls":[],"doc":"","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":94,"name":"name","signature":"fn name(&self) -> &str {","type":"function"}
{"calls":["Animal::new"],"doc":"Creates a new Dog with a name and pose.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":82,"name":"new","signature":"pub fn new(name: &str, pose: Pose) -> Self {","type":"function"}
{"doc":"Represents a dog, which is a type of Animal.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":76,"name":"Dog","signature":"pub struct Dog {","type":"class"}
{"calls":["self.pose.heading_to","self.pose.distance_to"],"doc":"Returns the distance and heading to another Animal.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":68,"name":"distance_and_heading_to","signature":"pub fn distance_and_heading_to(&self, other: &Animal) -> (f64, f64) {","type":"function"}
{"calls":["name.to_string"],"doc":"Creates a new Animal with a name and pose.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":64,"name":"new","signature":"pub fn new(name: &str, pose: Pose) -> Self {","type":"function"}
{"doc":"Represents an animal with a name and pose.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":57,"name":"Animal","signature":"pub struct Animal {","type":"class"}
{"calls":["self.point.heading_to"],"doc":"Returns the relative heading to another Point, adjusted by this pose's heading.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":43,"name":"heading_to","signature":"pub fn heading_to(&self, other: &Point) -> f64 {","type":"function"}
{"calls":["self.point.distance_to"],"doc":"Returns the distance to another Point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":39,"name":"distance_to","signature":"pub fn distance_to(&self, other: &Point) -> f64 {","type":"function"}
{"calls":[],"doc":"Creates a new Pose with x, y, and heading.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":35,"name":"new","signature":"pub fn new(x: f64, y: f64, heading: f64) -> Self {","type":"function"}
{"doc":"Represents a pose with position and heading.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":28,"name":"Pose","signature":"pub struct Pose {","type":"class"}
{"calls":["(other.y - self.y).atan2"],"doc":"Returns the angle (in radians) from this point to another Point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":22,"name":"heading_to","signature":"pub fn heading_to(&self, other: &Point) -> f64 {","type":"function"}
{"calls":["(dx * dx + dy * dy).sqrt"],"doc":"Returns the Euclidean distance to another Point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":16,"name":"distance_to","signature":"pub fn distance_to(&self, other: &Point) -> f64 {","type":"function"}
{"calls":[],"doc":"Creates a new Point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":12,"name":"new","signature":"pub fn new(x: f64, y: f64) -> Self {","type":"function"}
{"doc":"Represents a 2D point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":5,"name":"Point","signature":"pub struct Point {","type":"class"}
{"calls":[],"doc":"Consumes the container and returns the value.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":110,"name":"into_inner","signature":"pub fn into_inner(self) -> T {","type":"function"}
{"calls":[],"doc":"Creates a new Container.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":106,"name":"new","signature":"pub fn new(value: T) -> Self {","type":"function"}
{"calls":[],"doc":"","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":94,"name":"name","signature":"fn name(&self) -> &str {","type":"function"}
{"calls":["Animal::new"],"doc":"Creates a new Dog with a name and pose.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":82,"name":"new","signature":"pub fn new(name: &str, pose: Pose) -> Self {","type":"function"}
{"calls":["self.pose.heading_to","self.pose.distance_to"],"doc":"Returns the distance and heading to another Animal.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":68,"name":"distance_and_heading_to","signature":"pub fn distance_and_heading_to(&self, other: &Animal) -> (f64, f64) {","type":"function"}
{"calls":["name.to_string"],"doc":"Creates a new Animal with a name and pose.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":64,"name":"new","signature":"pub fn new(name: &str, pose: Pose) -> Self {","type":"function"}
{"doc":"Cardinal directions.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":49,"name":"Direction","signature":"pub enum Direction {","type":"class"}
{"calls":["self.point.heading_to"],"doc":"Returns the relative heading to another Point, adjusted by this pose's heading.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":43,"name":"heading_to","signature":"pub fn heading_to(&self, other: &Point) -> f64 {","type":"function"}
{"calls":["self.point.distance_to"],"doc":"Returns the distance to another Point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":39,"name":"distance_to","signature":"pub fn distance_to(&self, other: &Point) -> f64 {","type":"function"}
{"calls":[],"doc":"Creates a new Pose with x, y, and heading.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":35,"name":"new","signature":"pub fn new(x: f64, y: f64, heading: f64) -> Self {","type":"function"}
{"calls":["(other.y - self.y).atan2"],"doc":"Returns the angle (in radians) from this point to another Point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":22,"name":"heading_to","signature":"pub fn heading_to(&self, other: &Point) -> f64 {","type":"function"}
{"calls":["(dx * dx + dy * dy).sqrt"],"doc":"Returns the Euclidean distance to another Point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":16,"name":"distance_to","signature":"pub fn distance_to(&self, other: &Point) -> f64 {","type":"function"}
{"calls":[],"doc":"Creates a new Point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":12,"name":"new","signature":"pub fn new(x: f64, y: f64) -> Self {","type":"function"}
{"calls":[],"doc":"Consumes the container and returns the value.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":110,"name":"into_inner","signature":"pub fn into_inner(self) -> T {","type":"function"}
{"calls":[],"doc":"Creates a new Container.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":106,"name":"new","signature":"pub fn new(value: T) -> Self {","type":"function"}
{"calls":[],"doc":"","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":94,"name":"name","signature":"fn name(&self) -> &str {","type":"function"}
{"doc":"A trait for types that can be named.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":88,"name":"Named","signature":"pub trait Named {","type":"class"}
{"calls":["Animal::new"],"doc":"Creates a new Dog with a name and pose.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":82,"name":"new","signature":"pub fn new(name: &str, pose: Pose) -> Self {","type":"function"}
{"calls":["self.pose.heading_to","self.pose.distance_to"],"doc":"Returns the distance and heading to another Animal.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":68,"name":"distance_and_heading_to","signature":"pub fn distance_and_heading_to(&self, other: &Animal) -> (f64, f64) {","type":"function"}
{"calls":["name.to_string"],"doc":"Creates a new Animal with a name and pose.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":64,"name":"new","signature":"pub fn new(name: &str, pose: Pose) -> Self {","type":"function"}
{"calls":["self.point.heading_to"],"doc":"Returns the relative heading to another Point, adjusted by this pose's heading.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":43,"name":"heading_to","signature":"pub fn heading_to(&self, other: &Point) -> f64 {","type":"function"}
{"calls":["self.point.distance_to"],"doc":"Returns the distance to another Point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":39,"name":"distance_to","signature":"pub fn distance_to(&self, other: &Point) -> f64 {","type":"function"}
{"calls":[],"doc":"Creates a new Pose with x, y, and heading.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":35,"name":"new","signature":"pub fn new(x: f64, y: f64, heading: f64) -> Self {","type":"function"}
{"calls":["(other.y - self.y).atan2"],"doc":"Returns the angle (in radians) from this point to another Point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":22,"name":"heading_to","signature":"pub fn heading_to(&self, other: &Point) -> f64 {","type":"function"}
{"calls":["(dx * dx + dy * dy).sqrt"],"doc":"Returns the Euclidean distance to another Point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":16,"name":"distance_to","signature":"pub fn distance_to(&self, other: &Point) -> f64 {","type":"function"}
{"calls":[],"doc":"Creates a new Point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":12,"name":"new","signature":"pub fn new(x: f64, y: f64) -> Self {","type":"function"}
{"calls":[],"doc":"Consumes the container and returns the value.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":110,"name":"into_inner","parent":"Container<T>","signature":"pub fn into_inner(self) -> T {","type":"function"}
{"calls":[],"doc":"Creates a new Container.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":106,"name":"new","parent":"Container<T>","signature":"pub fn new(value: T) -> Self {","type":"function"}
{"calls":[],"doc":"","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":94,"name":"name","parent":"Animal","signature":"fn name(&self) -> &str {","type":"function"}
{"calls":["Animal::new"],"doc":"Creates a new Dog with a name and pose.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":82,"name":"new","parent":"Dog","signature":"pub fn new(name: &str, pose: Pose) -> Self {","type":"function"}
{"calls":["self.pose.heading_to","self.pose.distance_to"],"doc":"Returns the distance and heading to another Animal.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":68,"name":"distance_and_heading_to","parent":"Animal","signature":"pub fn distance_and_heading_to(&self, other: &Animal) -> (f64, f64) {","type":"function"}
{"calls":["name.to_string"],"doc":"Creates a new Animal with a name and pose.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":64,"name":"new","parent":"Animal","signature":"pub fn new(name: &str, pose: Pose) -> Self {","type":"function"}
{"calls":["self.point.heading_to"],"doc":"Returns the relative heading to another Point, adjusted by this pose's heading.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":43,"name":"heading_to","parent":"Pose","signature":"pub fn heading_to(&self, other: &Point) -> f64 {","type":"function"}
{"calls":["self.point.distance_to"],"doc":"Returns the distance to another Point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":39,"name":"distance_to","parent":"Pose","signature":"pub fn distance_to(&self, other: &Point) -> f64 {","type":"function"}
{"calls":[],"doc":"Creates a new Pose with x, y, and heading.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":35,"name":"new","parent":"Pose","signature":"pub fn new(x: f64, y: f64, heading: f64) -> Self {","type":"function"}
{"calls":["(other.y - self.y).atan2"],"doc":"Returns the angle (in radians) from this point to another Point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":22,"name":"heading_to","parent":"Point","signature":"pub fn heading_to(&self, other: &Point) -> f64 {","type":"function"}
{"calls":["(dx * dx + dy * dy).sqrt"],"doc":"Returns the Euclidean distance to another Point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":16,"name":"distance_to","parent":"Point","signature":"pub fn distance_to(&self, other: &Point) -> f64 {","type":"function"}
{"calls":[],"doc":"Creates a new Point.","file":"examples/example-treesitter-repo/src/rust/test.rs","language":"rust","line":12,"name":"new","parent":"Point","signature":"pub fn new(x: f64, y: f64) -> Self {","type":"function"}
{"file":"examples/example-treesitter-repo/src/swift/test.swift","language":"swift","line":57,"name":"Dog","signature":"class Dog: Animal {","type":"class"}
{"calls":["super.init"],"file":"examples/example-treesitter-repo/src/swift/test.swift","language":"swift","line":58,"name":"init","parent":"Dog","signature":"override init(name: String, pose: Pose) {","type":"function"}
{"file":"examples/example-treesitter-repo/src/swift/test.swift","language":"swift","line":43,"name":"Animal","signature":"class Animal {","type":"class"}
{"calls":["pose.headingTo","Point","pose.distanceTo","Point"],"file":"examples/example-treesitter-repo/src/swift/test.swift","language":"swift","line":50,"name":"distanceAndHeadingTo","parent":"Animal","signature":"func distanceAndHeadingTo(_ other: Animal) -> (Double, Double) {","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/swift/test.swift","language":"swift","line":46,"name":"init","parent":"Animal","signature":"init(name: String, pose: Pose) {","type":"function"}
{"file":"examples/example-treesitter-repo/src/swift/test.swift","language":"swift","line":36,"name":"Direction","signature":"enum Direction {","type":"class"}
{"calls":[],"file":"examples/example-treesitter-repo/src/swift/test.swift","language":"swift","line":32,"name":"add","signature":"func add(a: Int, b: Int) -> Int {","type":"function"}
{"file":"examples/example-treesitter-repo/src/swift/test.swift","language":"swift","line":21,"name":"Pose","signature":"class Pose: Point {","type":"class"}
{"calls":["super.headingTo"],"file":"examples/example-treesitter-repo/src/swift/test.swift","language":"swift","line":27,"name":"headingTo","parent":"Pose","signature":"override func headingTo(_ other: Point) -> Double {","type":"function"}
{"calls":["super.init"],"file":"examples/example-treesitter-repo/src/swift/test.swift","language":"swift","line":23,"name":"init","parent":"Pose","signature":"init(x: Double, y: Double, heading: Double) {","type":"function"}
{"file":"examples/example-treesitter-repo/src/swift/test.swift","language":"swift","line":4,"name":"Point","signature":"class Point {","type":"class"}
{"calls":["atan2"],"file":"examples/example-treesitter-repo/src/swift/test.swift","language":"swift","line":16,"name":"headingTo","parent":"Point","signature":"func headingTo(_ other: Point) -> Double {","type":"function"}
{"calls":["(dx * dx + dy * dy).squareRoot"],"file":"examples/example-treesitter-repo/src/swift/test.swift","language":"swift","line":11,"name":"distanceTo","parent":"Point","signature":"func distanceTo(_ other: Point) -> Double {","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/swift/test.swift","language":"swift","line":7,"name":"init","parent":"Point","signature":"init(x: Double, y: Double) {","type":"function"}
{"calls":[],"file":"examples/example-treesitter-repo/src/tsx/test.tsx","language":"typescript","line":10,"name":"add","signature":"function add(a: number, b: number): number {","type":"function"}
{"file":"examples/example-treesitter-repo/src/typescript/test.ts","language":"typescript","line":74,"name":"Box","signature":"class Box<T> {","type":"class"}
{"file":"examples/example-treesitter-repo/src/typescript/test.ts","language":"typescript","line":65,"name":"Cat","signature":"class Cat extends Animal implements Named {","type":"class"}
{"file":"examples/example-treesitter-repo/src/typescript/test.ts","language":"typescript","line":55,"name":"Dog","signature":"class Dog extends Animal {","type":"class"}
{"file":"examples/example-treesitter-repo/src/typescript/test.ts","language":"typescript","line":41,"name":"Animal","signature":"class Animal {","type":"class"}
{"file":"examples/example-treesitter-repo/src/typescript/test.ts","language":"typescript","line":23,"name":"Pose","signature":"class Pose extends Point {","type":"class"}
{"file":"examples/example-treesitter-repo/src/typescript/test.ts","language":"typescript","line":6,"name":"Point","signature":"class Point {","type":"class"}
{"calls":[],"file":"examples/example-treesitter-repo/src/typescript/test.ts","language":"typescript","line":2,"name":"add","signature":"function add(a: number, b: number): number {","type":"function"}
